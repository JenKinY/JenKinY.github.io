<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>手摸手教你MyBatis-plus</title>
      <link href="/2019/04/15/shou-mo-shou-jiao-ni-kai-qi-mybatis-plus/"/>
      <url>/2019/04/15/shou-mo-shou-jiao-ni-kai-qi-mybatis-plus/</url>
      
        <content type="html"><![CDATA[<h2 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h2><pre class="line-numbers language-yaml"><code class="language-yaml">IntelliJ IDEA 2019.1 (Ultimate Edition)<span class="token key atrule">JRE</span><span class="token punctuation">:</span> 1.8.0_202<span class="token punctuation">-</span>release<span class="token punctuation">-</span>1483<span class="token punctuation">-</span>b39 amd64<span class="token key atrule">JVM</span><span class="token punctuation">:</span> OpenJDK 64<span class="token punctuation">-</span>Bit Server VM by JetBrains s.r.oWindows 10 10.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>MyBatis-Plus官网：<a href="https://mp.baomidou.com/" target="_blank" rel="noopener">MyBatis-Plus官网</a></p><p>本文参考地址：<a href="https://mp.baomidou.com/guide/quick-start.html" target="_blank" rel="noopener">MyBatis-Plus快速开始</a></p><h2 id="一、创建一个SpringBoot项目"><a href="#一、创建一个SpringBoot项目" class="headerlink" title="一、创建一个SpringBoot项目"></a>一、创建一个SpringBoot项目</h2><p>使用 IDEA快速初始化一个 Spring Boot 工程</p><h2 id="二、添加依赖"><a href="#二、添加依赖" class="headerlink" title="二、添加依赖"></a>二、添加依赖</h2><p>添加 lombok,mysql,mybatis-plus，完成后的<dependencies>代码</dependencies></p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- lombok--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- mybatis-plus --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- mysql--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、配置"><a href="#三、配置" class="headerlink" title="三、配置"></a>三、配置</h2><h6 id="1-修改默认配置文件-application-properties-为-application-yml"><a href="#1-修改默认配置文件-application-properties-为-application-yml" class="headerlink" title="1.修改默认配置文件 application.properties 为 application.yml"></a>1.修改默认配置文件 <code>application.properties</code> 为 <code>application.yml</code></h6><h6 id="2-在-application-yml中添加Mysql相关配置"><a href="#2-在-application-yml中添加Mysql相关配置" class="headerlink" title="2.在 application.yml中添加Mysql相关配置"></a>2.在 <code>application.yml</code>中添加Mysql相关配置</h6><pre class="line-numbers language-yml"><code class="language-yml">spring:  datasource:    url: jdbc:mysql://127.0.0.1:3306    username: Mysql登录名    password: Mysql密码    driver-class-name: com.mysql.jdbc.Driver<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="3-在-Spring-Boot-启动类中添加-MapperScan-注解，扫描-Mapper-文件夹："><a href="#3-在-Spring-Boot-启动类中添加-MapperScan-注解，扫描-Mapper-文件夹：" class="headerlink" title="3.在 Spring Boot 启动类中添加 @MapperScan 注解，扫描 Mapper 文件夹："></a>3.在 Spring Boot 启动类中添加 <code>@MapperScan</code> 注解，扫描 Mapper 文件夹：</h6><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"top.skyzc.skyzcmybatisexample.mapper"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SkyzcMybatisExampleApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>SkyzcMybatisExampleApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、编码"><a href="#四、编码" class="headerlink" title="四、编码"></a>四、编码</h2><h6 id="1-新建一个Enity包，编写实体类-User-java"><a href="#1-新建一个Enity包，编写实体类-User-java" class="headerlink" title="1.新建一个Enity包，编写实体类 User.java"></a>1.新建一个Enity包，编写实体类 <code>User.java</code></h6><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span>    <span class="token keyword">private</span> String email<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>@Data</code>为Lombok插件，能自动为标注的类实现 getter/setter 方法，更多Lombok插件的使用方法后续会更新，此处了解即可</p><h6 id="2-新建一个mapper包，编写Mapper接口-UserMapper-java"><a href="#2-新建一个mapper包，编写Mapper接口-UserMapper-java" class="headerlink" title="2.新建一个mapper包，编写Mapper接口 UserMapper.java"></a>2.新建一个mapper包，编写Mapper接口 <code>UserMapper.java</code></h6><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="五、测试"><a href="#五、测试" class="headerlink" title="五、测试"></a>五、测试</h2><h6 id="1-编写测试类"><a href="#1-编写测试类" class="headerlink" title="1.编写测试类"></a>1.编写测试类</h6><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SampleTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserMapper userMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"----- selectAll method test ------"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>User<span class="token operator">></span> userList <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        Assert<span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span>userList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        userList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>out<span class="token operator">:</span><span class="token operator">:</span>println<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="2-查看控制台输出"><a href="#2-查看控制台输出" class="headerlink" title="2.查看控制台输出"></a>2.查看控制台输出</h6><pre class="line-numbers language-xml"><code class="language-xml">----- selectAll method test ------User(id=1, name=Jone, age=18, email=test1@baomidou.com)User(id=2, name=Jack, age=20, email=test2@baomidou.com)User(id=3, name=Tom, age=28, email=test3@baomidou.com)User(id=4, name=Sandy, age=21, email=test4@baomidou.com)User(id=5, name=Billie, age=24, email=test5@baomidou.com)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> MyBatis-Plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不知道写点什么?那就写写自己</title>
      <link href="/2019/04/13/bu-zhi-dao-xie-dian-shi-me-na-jiu-xie-xie-zi-ji/"/>
      <url>/2019/04/13/bu-zhi-dao-xie-dian-shi-me-na-jiu-xie-xie-zi-ji/</url>
      
        <content type="html"><![CDATA[<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/aAFtlrRHdaaJVkLxXgPUN1IacSBpq3DTzF1BC138ubylvSoNJfsoTo5J2Krne93Eib4YQXiaJrGkAJWBMtKSYOVQ/640?wx_fmt=jpeg" alt="img"></p><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a><strong>Hello World</strong></h2><blockquote><p>相信每个程序员对Hello’World肯定都会有特殊的情结吧^^</p></blockquote><p>一直想拥有一个属于自己的网站博客，公众号，这个想法在很早的时候就已经萌生在心底了。倒也不是懒，只是最近一直忙着别的事，回想两年来的确做过很多有意义的事，但感觉都是零零散散的，没有完完全全系统的做完一件事。不久前抽空搭建了自己的博客，终于有一个地方可以自己写写文章，记录记录自己的生活以及写写学习笔记了，但在写过几篇文章之后，感觉又有点儿懈怠了，平时感觉有记录的东西，可是在下班后就忘记了，不想动了想着有空在写。啧啧，发现我果然有着严重的拖延症，这个拖延症真是会在特别的时间出来，吞噬我的身体和精神，今天终于受不了了，生活嘛，总得逼着自己做出什么事情来，打败自己内心的恶魔，所以便在这特别的夜晚，开始写下Skyzc的第一篇文章。</p><p>最近深入研究了一下自媒体(wemedia)，这是在我博客搭建好之后一次偶尔的心中灵感，平时都是看别人博客，既然自己也开始写了，为何不把自己写的东西分享给更多的人，帮助更多的人呢，所以便开始了做自媒体的想法，微信公众号就是第一步。</p><h2 id="秉性"><a href="#秉性" class="headerlink" title="秉性"></a><strong>秉性</strong></h2><p>我有一个习惯，就是决定的事情，一定会去做到，不然就浑身难受，虽然有时候会被拖延症干扰，但是这并不会阻碍我去做这件事，这种习惯在以前不是这么强烈，自从18年4月20日(<em>2018年4月20日瑞典著名DJ,A神avicii逝世，就在当时前几个星期还看了他的2016年在UMF上的演出，就下定决心以后一定一定要去一次他的现场，当时在听到他去世时真的泪目了</em>)之后，便深知，有些事，一旦不及时去做，以后可能就再也没机会了；一些人，要是不去好好珍惜，可能就会永远失去。所以，乘还年轻，还有时间，去想去的地方，做自己想做的事，看自己想看的音乐会，好好爱自己爱的人。这个公众号就是来自我的一个突然想法，这篇文章的封面就是来自一场说走就走的旅行。</p><blockquote><p>whatever you do, do it a hundred percent. when you eat, eat like it’s your last meal.</p><p>不管你做什么 都要做到极致，上班就认真工作笑就尽情大笑，吃东西时就像是最后一餐那样去享受。            </p><p>–《绿皮书》</p></blockquote><p>这段话是我看完电影《绿皮书》后，记忆最深刻，最喜欢的一句话。我觉得生活真的应该如此，做什么都应该努力的做好，不要去浪费时间，浪费青春。相比整天的埋怨，更应该努力做好每一件事，去享受生活。毕竟，越努力越幸运嘛。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/aAFtlrRHdaaFvO2GdPYoDN7ClXJe0owROjthK1zeaBtFQknU2TP8Oec2ALyoQhriaZJMxNzGn6Bwl5eutDO8Dew/640?wx_fmt=gif" alt="img"></p><p>​                                                    ▲电影《绿皮书》片段</p><h2 id="热爱"><a href="#热爱" class="headerlink" title="热爱"></a><strong>热爱</strong></h2><p>我对自己所喜爱的东西，都有一种执念吧，不管对事还是对人。</p><p>喜欢编程，可以为了弄清楚一段代码翻无数的资料，可以为了写出让自己满意代码可以一个人在家坐在电脑旁捣鼓一整天，可以无时无刻都想到代码，可能正因为如此，能让我在工作的时候能够保持一个良好的专注能力，哈哈。做自己喜欢的事，总会有无限的动力。所以我很感谢家人和曾经的自己，他们没有限制我做我不喜欢的事；曾经的我也没有荒废青春，虽然没有考上好的学校，但是我一直在做我喜欢的事，我热爱的事，可以一直自愿而且毫无怨言地做下去。</p><p>喜欢电子音乐，我可以起床的时候带上耳机，吃饭的时候，睡觉的时候(<em>虽然说戴着耳机睡觉不好，不过我可忍不了音乐的诱惑==</em>)我都会戴着，高兴的时候，心情低落的时候，我都会沉浸在电子音乐的世界里。我可以从南走到北为了一场音乐节。自己攒钱买过电子音乐的乐器，然后一遍一遍学习。我觉得电子音乐是有魔力的，当你高兴的时候，音乐就会像你的心灵节拍一样悦动，当你低落的时候，音乐也会降下来，用那迷人的节奏安抚你的心灵；不同的时候，总能听出不一样的感觉。</p><p>电子音乐真的带给了我很多很多的快乐而有趣的经历，认识了很多有趣的人，有趣的事，这真是一生都难以忘怀的经历。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/aAFtlrRHdabe4ItRia0WLuJTF1ebCFI1YicRmbuvb11zoItkvAuXzawezdyInicUzkcuWPGcyzUMSXzAExyKwM12A/640?wx_fmt=png" alt="img"></p><p>love music!love life! 爱音乐，爱生活。</p><p>现在最期待的便是和自己所爱之人参加一场有烟花秀的电音节，想想都真的太美好了。</p><h2 id="沉淀"><a href="#沉淀" class="headerlink" title="沉淀"></a><strong>沉淀</strong></h2><p>前段时间一直过着上班写Bug下班继续写Bug的生活，让我深深体会到了作为一个上班族是多么的不容易，特别是我们程序员一族。总的来说，出了学校，并正式走进社会的这一个月以来(<em>看了上次发的朋友圈，正好一个月，哈哈真巧</em>)，真的学到了很多很多。不仅是知识，更多的的是一种责任吧，包括两方面的责任。</p><p>一是对他人的责任，以前做什么事基本上都是能够自己完成的，真正到了公司，一个项目真不是一个人能够独立完成的，所以现在做什么事，更多的是要为整个团队，整个公司着想。不仅是在工作上，生活中更应该如此，越长大，就会越意识到多交几个朋友，多认识几个人是多么重要的事。我算是从小就有着一点社交恐惧症吧，以前遇到一些人际交往的事，老是会去逃避，对别人挺不负责的。现在的话，更多的是会是迎难而上。</p><p>二便是对自己的责任，曾经有一次早上上班，经过十字路口，红灯，越来越多的上班人群汇聚过来，其中不乏很多焦急的面孔，等绿灯亮起的那一刹那，就像是打开了水龙头一般。望着这些匆忙的人群，不禁有些晃神，有一种时空交错，我不该属于这里的感觉，过了一秒才发现自己也在其中，便继续拖着脚步，跟上人流，成为他们中的一员…..这种感觉在我排着长队去公司食堂，最后吃着又贵又难吃的饭菜的时候又出现过一次。</p><p>这种种以前从未有过的经历，都一遍遍告诉我，现在已经不在像以前那样，什么事儿都有父母的照顾，学校的庇护。自己所做的每一件事，都要为自己负责。</p><p>这可能便是所谓的成长吧。</p><h2 id="异日"><a href="#异日" class="headerlink" title="异日"></a><strong>异日</strong></h2><p>我觉得做一件事最重要，最值得回忆就是过程。既然下定决心写点儿东西，那一定得做好规划，一步一步走下去，不管最后结果怎样。前段时间在网上找了各大自媒体平台的资料，对比研究后，做了这么一个大概的计划：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/aAFtlrRHdabe4ItRia0WLuJTF1ebCFI1Y4y6dscbuD1ePwt6AxJ83tWN9KbN8t6YYYPlBKDrAfVKoXgkhibYPAFA/640?wx_fmt=jpeg" alt="img"></p><p>一步一步前进！</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/bCceG1Whd3Cjk2TcJ5o98jmC0kuZX0icMwTiaWpjNUr2siaYhFicI6iaprlhy1KxrVWq0146vUOz6TrDoDGLThCKAAA/640?wx_fmt=png" alt="img"></p><p><strong>这里是Skyzc</strong></p><p><strong>扫码关注</strong></p><p><strong>和我一起看看，这个世界发生了什么吧！</strong> </p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/aAFtlrRHdabe4ItRia0WLuJTF1ebCFI1YhF3KllpwCKIAuicjWYoP2kUJLhMKVWOTQx7IznYLBJYaMHJpcmFHuyw/640?wx_fmt=jpeg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 废话手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Avicii-SOS</title>
      <link href="/2019/04/11/avicii-sos/"/>
      <url>/2019/04/11/avicii-sos/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电子音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>renren-security学习笔记01</title>
      <link href="/2019/04/08/renren-security-xue-xi-bi-ji-01/"/>
      <url>/2019/04/08/renren-security-xue-xi-bi-ji-01/</url>
      
        <content type="html"><![CDATA[<h3 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h3><p>​    记录自己学习 <a href="https://gitee.com/renrenio/renren-security" target="_blank" rel="noopener">renrennnn-security</a> 的一些步骤以及踩的一些坑。</p><p>​    环境：</p><pre class="line-numbers language-xml"><code class="language-xml">        JDK:1.8        Mysql:5.7        renren-security: V4.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​            项目说明，以及设计思想,项目结构,基本搭建过程详见 <a href="https://www.renren.io/guide/security" target="_blank" rel="noopener">renren-security官方文档</a> 此处不再赘述。</p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android集成BmobSDK之自动更新</title>
      <link href="/2019/04/05/android-ji-cheng-bmobsdk-zhi-zi-dong-geng-xin/"/>
      <url>/2019/04/05/android-ji-cheng-bmobsdk-zhi-zi-dong-geng-xin/</url>
      
        <content type="html"><![CDATA[<p>说明：</p><p> AndroidStudio:V3.3.2</p><p> targetSdkVersion:28</p><p> BmobSDK:V3.7.2</p><p> 官方文档：<a href="http://doc.bmob.cn/data/android/auto_update/" target="_blank" rel="noopener">Bmob文档中心-自动更新</a></p><h3 id="1、添加资源文件"><a href="#1、添加资源文件" class="headerlink" title="1、添加资源文件"></a>1、添加资源文件</h3><p>下载SDK提供的res文件夹拷入工程目录下，和工程本身res目录合并。</p><p><a href="https://www.bmob.cn/static/res.zip" target="_blank" rel="noopener">BmobSDK自动更新所需资源文件</a></p><p>这里需要注意的是：</p><ol><li>请不要随便删除其中的文件。</li><li>BmobSDK提供的资源文件都以bmob_开头。</li><li><code>如果是在AndroidStudio中用远程依赖的方式就可以跳过这个步骤，因为这些资源都在下载到本地的aar包中。</code></li></ol><h3 id="2、配置AndroidManifest-xml"><a href="#2、配置AndroidManifest-xml" class="headerlink" title="2、配置AndroidManifest.xml"></a>2、配置AndroidManifest.xml</h3><ol><li><p>打开AndroidManifest.xml,添加SDK所需权限：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 允许将下载的apk保存到sd卡中 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.WRITE_EXTERNAL_STORAGE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!-- 允许检查网络状态，从而根据不同网络环境决定何种下载策略,务必添加该权限 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.ACCESS_NETWORK_STATE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!-- 联网权限 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.INTERNET<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!-- 适配Android8.0的安装权限管理 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.REQUEST_INSTALL_PACKAGES<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：<code>（ps: Android6.0以上要动态处理该权限，不然会造成更新过程中下载失败！！）</code></p></li><li><p>添加渠道到标签下:(可选，这一步由于我不需要就没配置)</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span> <span class="token attr-name"><span class="token namespace">android:</span>value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Channel ID<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BMOB_CHANNEL<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明：</p><ul><li><code>BMOB_CHANNEL</code>用来标注应用推广渠道，不同渠道可以上传不同更新包，您可以使用20位以内的英文和数字为渠道定名，替换value中的<code>Channel ID</code>。如果不添加，将不区分渠道。<code>(注意不要出现在manifest中标识了渠道但后端控制台没写渠道值，这样是无法自动更新的，因为没匹配上)</code></li></ul></li><li><p>添加Activity到标签下：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>             <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cn.bmob.v3.update.UpdateDialogActivity<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:style/Theme.Translucent.NoTitleBar<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="3、-初始化AppVersion表"><a href="#3、-初始化AppVersion表" class="headerlink" title="3、 初始化AppVersion表"></a>3、 初始化AppVersion表</h3><p> 在调试程序入口添加此语句，可自动在后台生成 <code>AppVersion</code>表:</p><pre class="line-numbers language-java"><code class="language-java">    BmobUpdateAgent<span class="token punctuation">.</span><span class="token function">initAppVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>使用此语句在后台生成AppVersion后应删除此语句，否则可能会在后台重复创建此表</code></p><p> <strong>ps:</strong></p><p> <strong>若执行此语句后，在后台并未发现生成AppVersion表，可以尝试清除该应用数据，并再次打开 ，若还是无法生成可以手动创建此表，不过要注意个字段一定不要填错，具体字段可以跳到下面第5步查看或者查询官方文档-AppVersion各字段说明</strong></p><h3 id="4、调用自动更新接口"><a href="#4、调用自动更新接口" class="headerlink" title="4、调用自动更新接口"></a>4、调用自动更新接口</h3><p>最常见的自动更新模式是：当用户进入应用首页后，如果处于wifi环境则检测更新，如果有更新，弹出对话框提示有新版本，用户点选更新开始下载更新。实现的方法是，在应用程序入口Activity里的<code>OnCreate()</code>方法中调用如下代码：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle  savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    BmobUpdateAgent<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol><li>默认只在WiFi下才进行自动更新提醒。我们要在任意网络环境下都进行更新自动提醒，则请在update调用之前添加以下代码：</li></ol><pre class="line-numbers language-java"><code class="language-java">BmobUpdateAgent<span class="token punctuation">.</span><span class="token function">setUpdateOnlyWifi</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>如果你发现调用update方法无反应，可使用下面<code>自定义功能</code>中的<code>监听检测更新的结果</code>提到的方法来监听自动更新的结果,具体如下：</li></ol><pre class="line-numbers language-java"><code class="language-java">BmobUpdateAgent<span class="token punctuation">.</span><span class="token function">setUpdateListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BmobUpdateListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onUpdateReturned</span><span class="token punctuation">(</span><span class="token keyword">int</span> updateStatus<span class="token punctuation">,</span> UpdateResponse updateInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>        <span class="token comment" spellcheck="true">//根据updateStatus来判断更新是否成功</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="强制更新"><a href="#强制更新" class="headerlink" title="强制更新"></a>强制更新</h4><p>应用场景：如果应用需要屏蔽旧版本，强制用户必须更新升级到最新版才能继续使用。</p><p>SDK中为自动更新方式提供了<code>强制更新</code>功能，当开发者开启强制更新功能（即将后台的<code>AppVersion</code>表中的isforce字段置为true）时，客户端调用<code>BmobUpdateAgent.update(context)</code>方法后，更新对话框只保留“立即更新”按钮且不再支持回退操作。</p><h4 id="忽略版本更新"><a href="#忽略版本更新" class="headerlink" title="忽略版本更新"></a>忽略版本更新</h4><p>SDK中为自动更新方式提供了<code>忽略版本更新</code>功能，当用户勾选”忽略该版“选项时，再次调用<code>BmobUpdateAgent.update(context)</code>则不再出现版本更新对话框。</p><p><strong>注：强制更新和忽略版本更新只支持自动更新方式。</strong></p><h3 id="5、上传APK文件或填写apk文件的url地址"><a href="#5、上传APK文件或填写apk文件的url地址" class="headerlink" title="5、上传APK文件或填写apk文件的url地址"></a>5、上传APK文件或填写apk文件的url地址</h3><p>初始化AppVersion表成功后，开发者在管理后台的<code>数据浏览</code>页中就可以看见AppVersion表了：</p><p><img src="https://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Bmob%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/BmobAppVersion%E8%A1%A8.png" alt="AppVersion表"></p><p>新建的表没有数据的，表中个字段如下图：</p><p><strong><img src="https://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Bmob%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/AppVersion%E5%90%84%E5%AD%97%E6%AE%B5.png" alt="AppVersion各字段"></strong></p><p>我们只关注上图中框选的字段即可，其中：</p><ul><li><p><code>target_size</code> 需要填写我们安装包的实际占用字节(Windows下右键程序包&gt;属性&gt;大小，注意不是占用大小)，填入数值即可，不用添加单位</p><p><img src="https://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Bmob%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/APKSize.png" alt="target_size"></p></li><li><p><code>version_i</code> 对应我们项目的 <em>versionCode</em>若要更新，我们的更新包的<code>version_i</code> 值就要大于旧版本的<em>versionCode</em>的值</p></li><li><p><code>path</code> 和 <code>android_url</code> 可以二选一，两者都有的话默认优先选择 <code>android_url</code></p></li></ul><h3 id="6、集成检测"><a href="#6、集成检测" class="headerlink" title="6、集成检测"></a>6、集成检测</h3><p>SDK中默认开启了集成检测功能，在调用任意的更新接口后，我们将替您自动检查上述集成过程中2、3两个步骤是否被正确完成。 如果正确完成不会出现任何提示，否则会以如下的toast提示您。</p><p>你可以通过调用<code>BmobUpdateAgent.setUpdateCheckConfig(false)</code>来禁用此功能。</p><p>toast的含义如下：</p><pre class="line-numbers language-xml"><code class="language-xml">"Please copy all resources (res/) from SDK to your project!"：请检查是不是把res文件夹下所有的资源文件都放到了工程中。"Please add Permission in AndroidManifest!"：请检查上述步骤中的相关权限是否正确添加。"Please add Activity in AndroidManifest!"：请检查上述步骤中的Activity是否正确添加。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7、兼容Android7-0"><a href="#7、兼容Android7-0" class="headerlink" title="7、兼容Android7.0"></a>7、兼容Android7.0</h3><p>兼容了Android7.0中的FileProvider，具体用法如下：</p><h5 id="1-在AndroidManifest-xml中的Application标签下添加如下内容"><a href="#1-在AndroidManifest-xml中的Application标签下添加如下内容" class="headerlink" title="1.在AndroidManifest.xml中的Application标签下添加如下内容:"></a>1.在AndroidManifest.xml中的Application标签下添加如下内容:</h5><pre class="line-numbers language-xml"><code class="language-xml">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>provider</span>       <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.support.v4.content.FileProvider<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">android:</span>authorities</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>此处填写你应用的包名<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">android:</span>grantUriPermissions</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>           <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.support.FILE_PROVIDER_PATHS<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@xml/file_paths<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>provider</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-在res的xml目录下创建file-paths-xml文件，用来指定Apk文件下载的位置："><a href="#2-在res的xml目录下创建file-paths-xml文件，用来指定Apk文件下载的位置：" class="headerlink" title="2.在res的xml目录下创建file_paths.xml文件，用来指定Apk文件下载的位置："></a>2.在res的xml目录下创建file_paths.xml文件，用来指定Apk文件下载的位置：</h5><pre class="line-numbers language-xml"><code class="language-xml">   <span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>paths</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>external-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Download<span class="token punctuation">"</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Download<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>paths</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8、其他更新方式"><a href="#8、其他更新方式" class="headerlink" title="8、其他更新方式"></a>8、其他更新方式</h3><p> 除了在快速入门中提到的自动更新之外，Bmob自动更新SDK还支持另外两种场景：手动更新、静默更新。还提供很多自定义功能，本文只记录 自动更新-强制更新的方式，更多的详见<a href="http://doc.bmob.cn/data/android/auto_update/" target="_blank" rel="noopener">Bmob官方文档-自动更新</a></p><h3 id="9、所遇到的问题"><a href="#9、所遇到的问题" class="headerlink" title="9、所遇到的问题"></a>9、所遇到的问题</h3><p>按照官方文档进行上面的一番操作后，本应该相安无事，但是生活有时候总是要捉弄一下你</p><p>，代码也是，下面简述一下在集成自动更新时间所遇到的几个问题：</p><h4 id="1-配置完成后，进入页面闪退，并报错："><a href="#1-配置完成后，进入页面闪退，并报错：" class="headerlink" title="1.配置完成后，进入页面闪退，并报错："></a>1.配置完成后，进入页面闪退，并报错：</h4><p><img src="https://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Bmob%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/%E6%9B%B4%E6%96%B0%E5%87%BA%E9%94%99.png" alt="更新报错"></p><p>当时非常遗憾，在网上查询了一番也没找到到底是什么错，最后在官方用户群里了解到，只需要将我们的项目库升级成androidx即可，具体原因没有继续深入研究。</p><p>升级 <code>support</code> 到 <code>androidx</code>：AndroidStudio 3.2 以上添加了一件迁移功能: <code>Refactor</code> -&gt; <code>Migrate to AndroidX</code>,会提示你备份，一点要备份，万一翻车就惨了，你会拥有一大屏的红线 =_=</p><h4 id="2-点击更新按钮，但是下载失败："><a href="#2-点击更新按钮，但是下载失败：" class="headerlink" title="2.点击更新按钮，但是下载失败："></a>2.点击更新按钮，但是下载失败：</h4><p> 多机型(真机)测试后，发现部分手机可以，部分手机失败，检查了一番推理应该是权限问题。就想到了是储存权限</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 允许将下载的apk保存到sd卡中 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.WRITE_EXTERNAL_STORAGE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>应该作动态权限处理</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> BmobSDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-Learn01利用Idea快速搭建一个Springboo项目</title>
      <link href="/2019/04/03/springboot-learn01-li-yong-idea-kuai-su-da-jian-yi-ge-springboo-xiang-mu/"/>
      <url>/2019/04/03/springboot-learn01-li-yong-idea-kuai-su-da-jian-yi-ge-springboo-xiang-mu/</url>
      
        <content type="html"><![CDATA[<h2 id="Preface"><a href="#Preface" class="headerlink" title="Preface:"></a>Preface:</h2><pre class="line-numbers language-xml"><code class="language-xml">    IDEA:2018.3.6    JDK:1.8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​    参考：<a href="http://how2j.cn/k/springboot/springboot-idea/1641.html" target="_blank" rel="noopener">How2j-Springboot入门-idea</a> 推荐这个网站，教程很详细而且都有实例代码提供下载。</p><h2 id="MainBody"><a href="#MainBody" class="headerlink" title="MainBody:"></a>MainBody:</h2><h3 id="1-利用-Spring-Initializr-新建项目："><a href="#1-利用-Spring-Initializr-新建项目：" class="headerlink" title="1.利用 Spring Initializr 新建项目："></a>1.利用 Spring Initializr 新建项目：</h3><p><img src="http://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Springboot-quicekStart/NewProject01.png" alt="SpringInitializr"></p><p><img src="http://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Springboot-quicekStart/projectMetadata02.png" alt="ProjectMetadata"></p><h3 id="2-选择项目依赖"><a href="#2-选择项目依赖" class="headerlink" title="2.选择项目依赖:"></a>2.选择项目依赖:</h3><p><img src="http://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Springboot-quicekStart/Dependencies03.png" alt="Dependencies"></p><p>此处暂时无需其他依赖，只需勾选web即可。然后再次填写基本信息:</p><p>(此部分圆圈可以不用管，前面已经填写，此处只是为了查看)</p><p><img src="http://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Springboot-quicekStart/ProjectMoreSetting04.png" alt="info"></p><p>至此，项目基本环境配置已完成，等待Idea自动加载。</p><h3 id="3-开启自动配置Maven依赖"><a href="#3-开启自动配置Maven依赖" class="headerlink" title="3.开启自动配置Maven依赖"></a>3.开启自动配置Maven依赖</h3><p><img src="http://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Springboot-quicekStart/Enable%20auto05.png" alt="Enable Auto"></p><p>开启之后，以后在pom.xml添加依赖后，Idea会给我们自动导入。</p><h3 id="4-完成"><a href="#4-完成" class="headerlink" title="4.完成:"></a>4.完成:</h3><p>等待Idea加载完成后我们可以看到项目的基本架构</p><p><img src="http://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Springboot-quicekStart/all07.png" alt="all"></p><p>此时可以查看项目的pom.xml，发现Springboot需要的基本依赖Idea已经给我们导入了</p><h3 id="5-测试"><a href="#5-测试" class="headerlink" title="5.测试:"></a>5.测试:</h3><p>新建一个 controller包，在此包下新建一个 HelloController.java</p><p><img src="http://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Springboot-quicekStart/controller08.png" alt="Controller"></p><p>运行我们项目的入口程序(***Application),打开浏览器<a href="http://localhost:8080/hello" target="_blank" rel="noopener">http://localhost:8080/hello</a>：</p><p><img src="http://skyzc.oss-cn-shenzhen.aliyuncs.com/MyBlog/Springboot-quicekStart/show09.png" alt="show"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 18.04安装 Mysql5.7</title>
      <link href="/2019/03/29/ubuntu-install-mysql5.7/"/>
      <url>/2019/03/29/ubuntu-install-mysql5.7/</url>
      
        <content type="html"><![CDATA[<p>出现：ERROR 1045 (28000): Access denied for user ‘root‘@’localhost’ </p><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p>##1. 输入以下命令进行安装MySQL5.7</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> mysql-server<span class="token function">apt-get</span> isntall mysql-client<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libmysqlclient-dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>安装过程中会提示设置密码什么的，注意设置了不要忘了，安装完成之后可以使用如下命令来检查是否安装成功：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">netstat</span> -tap <span class="token operator">|</span> <span class="token function">grep</span> mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过上述命令检查之后，如果看到有mysql 的socket处于 listen 状态则表示安装成功。<br>登陆mysql数据库可以通过如下命令：</p><pre class="line-numbers language-bash"><code class="language-bash">mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>-u 表示选择登陆的用户名， -p 表示登陆的用户密码，上面命令输入之后会提示输入密码，此时输入密码就可以登录到mysql。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在我安装过程中，并未提示我设置root密码。安装完成后无法登陆，不带密码也无法登录。<br>在安装过程中会设置初始密码</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> vim /etc/mysql/debian.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后使用其中的</p><pre class="line-numbers language-bash"><code class="language-bash">user <span class="token operator">=</span> debin-sys-maintpassword <span class="token operator">=</span> *********<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这个账户登录：</p><pre class="line-numbers language-bash"><code class="language-bash">mysql -u debin-sys-maint -p  ***********<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以成功登录,然后修改密码：</p><pre class="line-numbers language-bash"><code class="language-bash">1.mysql<span class="token operator">></span>update mysql.user <span class="token keyword">set</span> authentication_string<span class="token operator">=</span>password<span class="token punctuation">(</span><span class="token string">'新密码放到这'</span><span class="token punctuation">)</span> where user<span class="token operator">=</span><span class="token string">'root'</span> and Host <span class="token operator">=</span> <span class="token string">'localhost'</span><span class="token punctuation">;</span>2.mysql<span class="token operator">></span>update mysql.user <span class="token keyword">set</span> plugin<span class="token operator">=</span><span class="token string">"mysql_native_password"</span><span class="token punctuation">;</span>3.mysql<span class="token operator">></span>flush privileges<span class="token punctuation">;</span>4.mysql<span class="token operator">></span>quit5.<span class="token variable">$sudo</span> <span class="token function">service</span> mysql restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后就可以使用你设置的root密码登录root账户</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.linuxidc.com/Linux/2017-05/143864.htm" target="_blank" rel="noopener">Ubuntu 16.04 上安装 MySQL 5.7 教程</a><br><a href="https://blog.csdn.net/weixin_42353109/article/details/81431051" target="_blank" rel="noopener">Ubuntu下MySQL5.7初始密码修改（附：Windows下MySQL8.0.11找出初始密码）</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
